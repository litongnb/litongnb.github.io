<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java001</title>
      <link href="/2022/10/26/java001/"/>
      <url>/2022/10/26/java001/</url>
      
        <content type="html"><![CDATA[<h1 id="java基础"><a href="#java基础" class="headerlink" title="java基础"></a>java基础</h1><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p>Java的算术运算符有+ - * &#x2F;<br>其中+ - * 和数学中的运算一样    <strong>但是 &#x2F; 有区别</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>整数相除结果只能得到整除，如果结果想要是小数，必须要有小数参数。</span><br><span class="line"><span class="number">2.</span>小数直接参与运算，得到的结果有可能是不精确的。</span><br><span class="line">案例：</span><br><span class="line">System.out.println( <span class="number">10</span> / <span class="number">3</span>);<span class="comment">//3</span></span><br><span class="line">System.out.println(<span class="number">10.0</span> / <span class="number">3</span>);<span class="comment">//3.3333333333333335</span></span><br></pre></td></tr></table></figure><p><strong>取模、取余</strong>用 <strong>%<strong>来运算  得到的结果为</strong>余数</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="number">10</span> % <span class="number">2</span>);<span class="comment">//0</span></span><br><span class="line">System.out.println(<span class="number">10</span> % <span class="number">3</span>);<span class="comment">//1</span></span><br><span class="line">应用场景：</span><br><span class="line"><span class="comment">//可以利用取模来判断一个数是奇数还是偶数</span></span><br><span class="line">System.out.println(<span class="number">15</span> % <span class="number">2</span>);<span class="comment">//1  奇数</span></span><br></pre></td></tr></table></figure><h4 id="数值拆分"><a href="#数值拆分" class="headerlink" title="数值拆分"></a>数值拆分</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.键盘录入一个三位数</span></span><br><span class="line"><span class="comment">//导包 --- 创建对象 --- 接收数据</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个三位数&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> sc.nextInt();<span class="comment">//123</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.获取这个三位数的个位、十位、百位并打印出来</span></span><br><span class="line"><span class="comment">//公式：</span></span><br><span class="line"><span class="comment">//针对于任意的一个数而言</span></span><br><span class="line"><span class="comment">//个位： 数字 % 10</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">ones</span> <span class="operator">=</span> number % <span class="number">10</span>;</span><br><span class="line"><span class="comment">//十位： 数字 / 10 % 10</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">tens</span> <span class="operator">=</span> number / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line"><span class="comment">//百位： 数字 / 100 % 10</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">hundreds</span> <span class="operator">=</span> number / <span class="number">100</span>  % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">        System.out.println(ones);</span><br><span class="line">        System.out.println(tens);</span><br><span class="line">        System.out.println(hundreds);</span><br></pre></td></tr></table></figure><p>先录入数字，<strong>int</strong>定义每个位置的数，分别除以他的位数(个位&#x2F;1；十位&#x2F;10；百位&#x2F;100……),对10取模得到每一位数字</p><hr><h3 id="隐式转换、强制转换"><a href="#隐式转换、强制转换" class="headerlink" title="隐式转换、强制转换"></a>隐式转换、强制转换</h3><p><strong>隐式转换</strong></p><p>不同变量类型在参与运算时，会将自己的变量提升为最大的变量值</p><p>short , char , byte 在参与运算时会自动转换为int型参与计算</p><p><strong>强制转换</strong></p><p>把<strong>取值范围大的数据或者变量</strong>赋值给另一个<strong>范围较小的变量</strong>，是不被允许的<br>如果一定这么做需要加入<strong>强制转化</strong></p><p><strong>书写格式：</strong></p><p> 目标数据类型 变量名 &#x3D; （目标数据类型）被强转的数据；</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">12.3</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">int</span>) a;</span><br><span class="line">        System.out.println(b);<span class="comment">//12</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>强制转换可能会导致数据发生错误(数据的精度丢失)</p><hr><h3 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h3><p><strong>分类：</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">++  自增运算符</span><br><span class="line">--  自减运算符</span><br></pre></td></tr></table></figure><p>++：就是把变量里面的值+1</p><p>–：就是把变量里面的值-1</p><p><strong>注意点：</strong></p><p> 不管是先++，还是后++。单独写在一行的时候，运算结果是一模一样的。</p><p>在同一行，  ++i 运算先取加1后的i    i++先取i的原值，但是后面引用时i值也为原值+1</p><hr><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p>又叫比较运算符，其实就是拿着左边跟右边进行了判断而已。</p><h5 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h5><table><thead><tr><th>符号</th><th>解释</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>就是判断左边跟右边是否相等，如果成立就是true，如果不成立就是false</td></tr><tr><td>!&#x3D;</td><td>就是判断左边跟右边是否不相等，如果成立就是true，如果不成立就是false</td></tr><tr><td>&gt;</td><td>就是判断左边是否大于右边，如果成立就是true，如果不成立就是false</td></tr><tr><td>&gt;&#x3D;</td><td>就是判断左边是否大于等于右边，如果成立就是true，如果不成立就是false</td></tr><tr><td>&lt;</td><td>就是判断左边是否小于右边，如果成立就是true，如果不成立就是false</td></tr><tr><td>&lt;&#x3D;</td><td>就是判断左边是否小于等于右边，如果成立就是true，如果不成立就是false</td></tr></tbody></table><h5 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a>注意点：</h5><ul><li><p>关系运算符最终的结果一定是布尔类型的。要么是true，要么是false</p></li><li><p>在写&#x3D;&#x3D;的时候，千万不要写成&#x3D;</p></li></ul><p><strong>&amp; 和 |的使用</strong></p><p>&amp;：逻辑与（而且）</p><p> <strong>两边都为真，结果才是真</strong>，只要有一个为假，那么结果就是假。</p><p>|：逻辑或（或者）</p><p> <strong>两边都为假，结果才是假</strong>，只要有一个为真，那么结果就是真。</p><p><strong>^ 异或</strong><br><strong>如果两边相同，结果为false，如果两边不同，结果为true</strong></p><p><strong>| 取反</strong><br>false取反就是true，true取反就是false</p><hr><h3 id="短路逻辑运算符"><a href="#短路逻辑运算符" class="headerlink" title="短路逻辑运算符"></a>短路逻辑运算符</h3><p>分类： &amp;&amp; ||</p><p><strong>&amp;&amp;：</strong></p><p> 运算结果跟&amp;是一模一样的，只不过具有短路效果。</p><p><strong>||：</strong></p><p> 运算结果跟|是一模一样的。只不过具有短路效果。</p><p><strong>逻辑核心：</strong></p><p> 当左边不能确定整个表达式的结果，右边才会执行。</p><p> 当左边能确定整个表达式的结果，那么右边就不会执行了。从而提高了代码的运行效率。</p><p><strong>短路逻辑运算符可以提高程序的运行效率</strong></p><hr><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h3><h5 id="格式："><a href="#格式：" class="headerlink" title="格式："></a>格式：</h5><p> <strong>关系表达式 ？ 表达式1 ：表达式2</strong> ；</p><h5 id="计算规则："><a href="#计算规则：" class="headerlink" title="计算规则："></a>计算规则：</h5><ul><li>计算关系表达式的值。</li><li>如果关系表达式的值为真，那么执行表达式1。</li><li>如果关系表达式的值为假，那么执行表达式2。</li></ul><h5 id="注意点：-1"><a href="#注意点：-1" class="headerlink" title="注意点："></a>注意点：</h5><p> 三元运算符的最终结果一定要被使用，要么赋值给一个变量，要么直接打印出来。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo12</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//需求：求两个数的较大值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//格式：关系表达式 ？ 表达式1 ： 表达式2 ；</span></span><br><span class="line">        <span class="comment">//注意点：</span></span><br><span class="line">        <span class="comment">//三元运算符的最终结果一定要被使用。</span></span><br><span class="line">        <span class="comment">//要么赋值给一个变量，要么直接输出。</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span>  a &gt; b ? a : b ;</span><br><span class="line">        System.out.println(max);</span><br><span class="line">        System.out.println(a &gt; b ? a : b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="运算符的优先级"><a href="#运算符的优先级" class="headerlink" title="运算符的优先级"></a>运算符的优先级</h3><p>小括号优先于所有</p><hr><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><h5 id="练习1-两只老虎"><a href="#练习1-两只老虎" class="headerlink" title="练习1-两只老虎"></a>练习1-两只老虎</h5><p>需求：</p><p> 动物园里有两只老虎，两只老虎的体重分别为通过键盘录入获得，</p><p> 请用程序实现判断两只老虎的体重是否相同。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.获取两只老虎的体重</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入第一只老虎的体重&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">weight1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">System.out.println(<span class="string">&quot;请输入第二只老虎的体重&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">weight2</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.利用三元运算符求出最终结果</span></span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> weight1 == weight2 ? <span class="string">&quot;相同&quot;</span> : <span class="string">&quot;不相同&quot;</span>;</span><br><span class="line">System.out.println(result);</span><br></pre></td></tr></table></figure><h5 id="练习2-求三个数的最大值"><a href="#练习2-求三个数的最大值" class="headerlink" title="练习2-求三个数的最大值"></a>练习2-求三个数的最大值</h5><p>需求：</p><p> 一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm。</p><p> 请用程序实现获取这三个和尚的最高身高。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.定义三个变量记录和尚的身高</span></span><br><span class="line"><span class="type">int</span> <span class="variable">height1</span> <span class="operator">=</span> <span class="number">150</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">height2</span> <span class="operator">=</span> <span class="number">210</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">height3</span> <span class="operator">=</span> <span class="number">165</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.利用三元运算符求出两个数中的较大值。</span></span><br><span class="line"><span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> height1 &gt; height2 ? height1 : height2;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.求出最终的结果</span></span><br><span class="line"><span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> temp &gt; height3 ? temp : height3;</span><br><span class="line"></span><br><span class="line">System.out.println(max);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>js 数据输入输出类型001</title>
      <link href="/2022/10/23/js001/"/>
      <url>/2022/10/23/js001/</url>
      
        <content type="html"><![CDATA[<h1 id="javascript基础"><a href="#javascript基础" class="headerlink" title="javascript基础"></a>javascript基础</h1><h3 id="输入输出语法"><a href="#输入输出语法" class="headerlink" title="输入输出语法"></a>输入输出语法</h3><p>两种输出方式：</p><ol><li><strong>网页内容输出</strong></li><li><strong>控制台输出</strong></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这是一个输入框</span></span><br><span class="line"><span class="title function_">prompt</span>(<span class="string">&#x27;请输入您的年龄&#x27;</span>);</span><br><span class="line"><span class="comment">// alert 弹出警示框 输出的 展示给用户的</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;计算的结果是&#x27;</span>);</span><br><span class="line"><span class="comment">// console 控制台输出 给程序员测试用的  </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是程序员能看到的&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>alert</strong>：弹出警示框</p><p>输入：<strong>prompt</strong>(“输入内容”)</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> uname = <span class="title function_">prompt</span>(<span class="string">&#x27;请您输入姓名：&#x27;</span>)</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(uname)</span><br></pre></td></tr></table></figure><p>这里先赋值uname为输入(prompt内容)<br>页面输出内容</p><hr><h3 id="数组、字符串拼接"><a href="#数组、字符串拼接" class="headerlink" title="数组、字符串拼接"></a>数组、字符串拼接</h3><p>数组 arr[n]   :   有n个元素的数组，第一个为第0个开始计数</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;马超&#x27;</span>, <span class="string">&#x27;黄忠&#x27;</span>, <span class="string">&#x27;关羽&#x27;</span>, <span class="string">&#x27;张飞&#x27;</span>, <span class="string">&#x27;貂蝉&#x27;</span>]</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line">        <span class="comment">// 取值  数组名[索引]</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">0</span>])</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">4</span>])</span><br></pre></td></tr></table></figure><p>arr[0]  为第一个元素，马超<br>arr[4]  为第五个元素，貂蝉</p><p>字符串拼接：’字符串’ + ‘拼接’<br>输出结果为  ‘字符串拼接’</p><hr><h3 id="数字型、isNaN"><a href="#数字型、isNaN" class="headerlink" title="数字型、isNaN"></a>数字型、isNaN</h3><p>八进制  0 ~ 7  我们程序里面数字前面加0 表示八进制<br>十六进制  0 ~ 9  a ~ f   #ffffff  数字的前面加 0x 表示十六进制  10<br>数字型的最大值：<em>Number</em>.MAX_VALUE</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>; <span class="comment">// num 数字型 </span></span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">PI</span> = <span class="number">3.14</span> <span class="comment">// PI 数字型</span></span><br><span class="line">            <span class="comment">// 1. 八进制  0 ~ 7  我们程序里面数字前面加0 表示八进制</span></span><br><span class="line">        <span class="keyword">var</span> num1 = <span class="number">010</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(num1); <span class="comment">//  010  八进制 转换为 10进制 就是  8 </span></span><br><span class="line">        <span class="keyword">var</span> num2 = <span class="number">012</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(num2);</span><br><span class="line">        <span class="comment">// 2. 十六进制  0 ~ 9  a ~ f    #ffffff  数字的前面加 0x 表示十六进制   10</span></span><br><span class="line">        <span class="keyword">var</span> num3 = <span class="number">0x9</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(num3);    <span class="comment">//9</span></span><br><span class="line">        <span class="keyword">var</span> num4 = <span class="number">0xa</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(num4);    <span class="comment">//10</span></span><br><span class="line">        <span class="comment">// 3. 数字型的最大值</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="property">MAX_VALUE</span>);</span><br><span class="line">        <span class="comment">// 4. 数字型的最小值</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="property">MIN_VALUE</span>);</span><br><span class="line">        <span class="comment">// 5. 无穷大</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="property">MAX_VALUE</span> * <span class="number">2</span>); <span class="comment">// Infinity 无穷大  </span></span><br><span class="line">        <span class="comment">// 6. 无穷小</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(-<span class="title class_">Number</span>.<span class="property">MAX_VALUE</span> * <span class="number">2</span>); <span class="comment">// -Infinity 无穷大</span></span><br><span class="line">        <span class="comment">// 7. 非数字</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;pink老师&#x27;</span> - <span class="number">100</span>); <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure><p><strong>NaN 是 Not a Number(不是一个数值</strong></p><p><strong>isNaN( )</strong>:<br>这个方法用来判断非数字<br>并且返回一个值   如果是数字返回的是 false    如果不是数字返回的是true</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">isNaN</span>(<span class="number">12</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">isNaN</span>(<span class="string">&#x27;pink老师&#x27;</span>)); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><hr><h3 id="布尔型boolean"><a href="#布尔型boolean" class="headerlink" title="布尔型boolean"></a>布尔型boolean</h3><p><strong>true</strong>参与加减法运算当<strong>1</strong>来看；<br><strong>false</strong>参与加减法运算当<strong>0</strong>来看</p><p>如果一个变量<strong>没有赋值</strong>，那么输出结果就是  <strong>underfind</strong>未定义数据类型</p><p><strong>undefined</strong> 和数字相加 最后的结果是 <strong>NaN</strong></p><p><strong>null</strong>空值在<strong>字符串运算</strong>中<strong>直接运算</strong>，在<strong>数字运算</strong>中<strong>当作0空值运算</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> flag = <span class="literal">true</span>; <span class="comment">// flag 布尔型 </span></span><br><span class="line">        <span class="keyword">var</span> flag1 = <span class="literal">false</span>; <span class="comment">// flag1 布尔型</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(flag + <span class="number">1</span>); <span class="comment">// true 参与加法运算当1来看</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(flag1 + <span class="number">1</span>); <span class="comment">// false 参与加法运算当 0来看</span></span><br><span class="line">        <span class="comment">// 如果一个变量声明未赋值 就是 undefined 未定义数据类型</span></span><br><span class="line">        <span class="keyword">var</span> str;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">        <span class="keyword">var</span> variable = <span class="literal">undefined</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(variable + <span class="string">&#x27;pink&#x27;</span>); <span class="comment">// undefinedpink</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(variable + <span class="number">1</span>); <span class="comment">// NaN  undefined 和数字相加 最后的结果是 NaN</span></span><br><span class="line">        <span class="comment">// null 空值</span></span><br><span class="line">        <span class="keyword">var</span> space = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(space + <span class="string">&#x27;pink&#x27;</span>); <span class="comment">// nullpink</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(space + <span class="number">1</span>); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><hr><h3 id="获取变量数据类型、字面量"><a href="#获取变量数据类型、字面量" class="headerlink" title="获取变量数据类型、字面量"></a>获取变量数据类型、字面量</h3><p><strong>typeof</strong>  +  变量名   ：   数据类型</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> num); <span class="comment">// number</span></span><br><span class="line">        <span class="keyword">var</span> str = <span class="string">&#x27;pink&#x27;</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> str); <span class="comment">// string</span></span><br><span class="line">        <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> flag); <span class="comment">// boolean</span></span><br><span class="line">        <span class="keyword">var</span> vari = <span class="literal">undefined</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> vari); <span class="comment">// undefined</span></span><br><span class="line">        <span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> timer); <span class="comment">// object</span></span><br><span class="line">        <span class="comment">// prompt 取过来的值是 字符型的</span></span><br><span class="line">        <span class="keyword">var</span> age = <span class="title function_">prompt</span>(<span class="string">&#x27;请输入您的年龄&#x27;</span>);</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;你的年龄是&#x27;</span>+age+<span class="string">&#x27;岁&#x27;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(age);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> age);</span><br></pre></td></tr></table></figure><p>console.log(18)       <strong>18   数字型    蓝色</strong><br>console.log(‘18’)     <strong>‘18’ 字符串型   黑色</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">18</span>);<span class="comment">//数字型</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;18&#x27;</span>);<span class="comment">//字符串型</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">true</span>);<span class="comment">//布尔型</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">undefined</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><img src="/2022/10/23/js001/字面量截图.png" alt="字面量截图" style="zoom:25%;"><hr><h3 id="转换为字符型、数字型、布尔型"><a href="#转换为字符型、数字型、布尔型" class="headerlink" title="转换为字符型、数字型、布尔型"></a>转换为字符型、数字型、布尔型</h3><p><strong>转换为字符串型的三种方法：</strong></p><ol><li>把数字型转换为<strong>字符串型变量.toString()</strong>       </li><li>我们利用 <strong>String(变量)</strong>    </li><li>利用 <strong>+ 拼接字符串</strong>的方法实现转换效果 隐式转换</li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 把数字型转换为字符串型 变量.toString()</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> str = num.<span class="title function_">toString</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> str);</span><br><span class="line"><span class="comment">// 2. 我们利用 String(变量)   </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">String</span>(num));</span><br><span class="line"><span class="comment">// 3. 利用 + 拼接字符串的方法实现转换效果 隐式转换</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num + <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br></pre></td></tr></table></figure><p>如果没有转换，输出的就是数字型，控制台是蓝色；<br>字符型输出为黑色</p><p><strong>转换数字型的方法：</strong></p><p>​    <strong>parse</strong>  +  <strong>数字类型</strong>  转化为对应数字类型</p><ol><li><strong>parseInt(变量)</strong>  可以把 字符型的转换为数字型 得到是整数</li><li><strong>parseFloat(变量)</strong> 可以把 字符型的转换为数字型 得到是小数 浮点数</li><li>利用 <strong>Number(变量)</strong>     和String(变量)一样   转换为数字型</li><li>利用了算数运算 <strong>-  *  &#x2F;</strong>  隐式转换</li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseInt</span>(age)); <span class="comment">// NaN</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseInt</span>(<span class="string">&#x27;3.14&#x27;</span>)); <span class="comment">// 3 取整</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseInt</span>(<span class="string">&#x27;3.94&#x27;</span>)); <span class="comment">// 3 取整</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseInt</span>(<span class="string">&#x27;120px&#x27;</span>)); <span class="comment">// 120 会去到这个px单位</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseInt</span>(<span class="string">&#x27;rem120px&#x27;</span>)); <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseFloat</span>(<span class="string">&#x27;3.14&#x27;</span>)); <span class="comment">// 3.14</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseFloat</span>(<span class="string">&#x27;120px&#x27;</span>)); <span class="comment">// 120 会去掉这个px单位</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseFloat</span>(<span class="string">&#x27;rem120px&#x27;</span>)); <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>(str)); <span class="comment">// 123</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>(<span class="string">&#x27;12&#x27;</span>)); <span class="comment">// 12</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;12&#x27;</span> - <span class="number">0</span>); <span class="comment">// 12</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;123&#x27;</span> - <span class="string">&#x27;120&#x27;</span>); <span class="comment">// 3</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;123&#x27;</span> * <span class="number">1</span>); <span class="comment">// 123</span></span><br></pre></td></tr></table></figure><p><strong>转换为布尔型：</strong><br>    <strong><em>Boolean</em>(变量)</strong>     转换为布尔型  输出值为false&#x2F;true</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="string">&#x27;&#x27;</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="number">0</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="title class_">NaN</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="literal">null</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="literal">undefined</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;------------------------------&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="string">&#x27;123&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="string">&#x27;你好吗&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="string">&#x27;我很好&#x27;</span>)); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
